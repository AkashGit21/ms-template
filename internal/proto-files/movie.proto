
syntax = "proto3";

package movie;
option go_package = "internal/grpc/movie; moviepb";

import "pkg/google/api/field_behavior.proto";
import "pkg/google/api/annotations.proto";
import "google/protobuf/empty.proto";

// Service defined to manage Movie related activities and data
service MovieService {

  // Lists all the movies
  rpc ListMovies(ListMoviesRequest) returns (ListMoviesResponse) {
    option (google.api.http) = {
      get: "/v1/movies"
    };
  }

  // Fetches the movie with given ID
  rpc GetMovie(GetMovieRequest) returns (Movie) {
    option (google.api.http) = {
      get: "/v1/movies/{id}"
    };
  }

  // Inserts the movie with provided values, and returns the generated ID for movie
  rpc CreateMovie(CreateMovieRequest) returns (CreateMovieResponse) {
    option (google.api.http) = {
      post: "/v1/movies"
      body: "movie"
    };
  }

  // Update an already present Movie with new values
  rpc UpdateMovie(UpdateMovieRequest) returns (UpdateMovieResponse) {
    option (google.api.http) = {
      put: "/v1/movies/{id}"
      body: "movie"
    };
  }
  
  // Update an already present Movie with new values
  rpc PartialUpdateMovie(PartialUpdateMovieRequest) returns (PartialUpdateMovieResponse) {
    option (google.api.http) = {
      patch: "/v1/movies/{id}"
      body: "*"
    };
  }

  // Delete an existing Record with given ID 
  rpc DeleteMovie(DeleteMovieRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/v1/movies/{id}"
    };
  }
}

// The request message for the movie.MovieService\ListMovies
// method.
message ListMoviesRequest {
  // The page_token for that page to be uniquely identified
  string page_token = 1;

  // The maximum number of objects to return. Server may return fewer objects
  // than requested. If unspecified, server will pick an appropriate default.
  int32 page_size = 2;
}

// The request message for the movie.MovieService\ListMovies
// method.
message ListMoviesResponse {
  repeated Movie movies = 1;
  string next_page_token = 2;
}

// The request message for the movie.MovieService\GetMovie
// method.
message GetMovieRequest {
  // Required. The unique ID of movie
  string id = 1
  [(google.api.field_behavior) = OUTPUT_ONLY];
}

// The request message for the movie.MovieService\CreateMovie
// method.
message CreateMovieRequest {
  Movie movie = 1; 
}

// The response message for the movie.MovieService\CreateMovie
// method.
message CreateMovieResponse {
  string id = 1;
}

// The request message for the movie.MovieService\UpdateMovie
// method.
message UpdateMovieRequest {
  string id = 1;
  Movie movie = 2;
}

// The response message for the movie.MovieService\UpdateMovie
// method.
message UpdateMovieResponse {
  string id = 1;
}

// The request message for the movie.MovieService\PartialUpdateMovie
// method.
message PartialUpdateMovieRequest {
  
  // Unique ID for the Movie
  string id = 1;

  // Brief summary of the Movie
  string summary = 3[
    (google.api.field_behavior) = REQUIRED
  ]; 

  // Group of actors who make up a Film or stage play
  repeated string cast = 5;

  // Tags related to the Movie
  repeated Tag tags = 6[
    (google.api.field_behavior) = REQUIRED
  ];

  // Director of film
  string director = 7;

  // The author(s) of film 
  repeated string writers = 8;
}

// The response message for the movie.MovieService\PartialUpdateMovie
// method.
message PartialUpdateMovieResponse {
  string id = 1;
}

// The request message for the movie.MovieService\DeleteMovie
// method.
message DeleteMovieRequest {
  string id = 1;
}

// Tags describing Movie characteristics
enum Tag {
  // Default tag 
  UNDEFINED_TAG = 0;
  // Action tag
  Action = 1;
  // Adventure tag
  Adventure = 2;
  // Fantasy tag
  Fantasy = 3;
  // Comedy tag
  Comedy = 4;  

}

// The movie
message Movie {
  // Output only. The Unique ID for the Movie
  string id = 1
    [(google.api.field_behavior) = OUTPUT_ONLY];

  // Required. Name of the Movie
  string name = 2
    [(google.api.field_behavior) = REQUIRED];

  // Brief summary of the Movie
  string summary = 3; 

  // Group of actors who make up a Film or stage play
  repeated string cast = 5;

  // Required. Tags related to the Movie
  repeated Tag tags = 6
    [(google.api.field_behavior) = REQUIRED];

  // Director of film
  string director = 7;

  // The author(s) of film 
  repeated string writers = 8;
}